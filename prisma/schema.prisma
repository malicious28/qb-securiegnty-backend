generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int             @id @default(autoincrement())
  email             String          @unique
  password          String?
  createdAt         DateTime        @default(now())
  country           String?
  firstName         String?
  lastName          String?
  verificationToken String?
  updatedAt         DateTime?       @default(now()) @updatedAt
  googleId          String?         @unique
  isEmailVerified   Boolean         @default(false)
  lastLoginAt       DateTime?
  appointments      Appointment[]
  meetingDetails    MeetingDetails[]
}

model Appointment {
  id              Int             @id @default(autoincrement())
  name            String
  email           String
  phone           String?
  message         String?
  appointmentDate DateTime?
  appointmentType String?         @default("general")
  userId          Int?
  user            User?           @relation(fields: [userId], references: [id], onDelete: SetNull)
  meetingDetails  MeetingDetails?
  createdAt       DateTime        @default(now())
}

model MeetingDetails {
  id            Int          @id @default(autoincrement())
  appointmentId Int?         @unique
  appointment   Appointment? @relation(fields: [appointmentId], references: [id], onDelete: SetNull)
  name          String
  email         String
  phone         String?
  company       String?
  position      String?
  meetingDate   DateTime?
  meetingTime   String?
  duration      String?      @default("30 minutes")
  location      String?      @default("virtual")
  agenda        String?
  requirements  String?
  notes         String?
  status        String?      @default("pending")
  userId        Int?
  user          User?        @relation(fields: [userId], references: [id], onDelete: SetNull)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model EarlyAccess {
  id         Int      @id @default(autoincrement())
  name       String
  email      String
  occupation String?
  createdAt  DateTime @default(now())
}
